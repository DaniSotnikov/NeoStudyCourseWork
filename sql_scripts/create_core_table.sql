-- Создаем схему DS
CREATE SCHEMA IF NOT EXISTS DS;

-- Таблица FT_BALANCE_F
CREATE  TABLE IF NOT EXISTS DS.FT_BALANCE_F (
    ON_DATE DATE NOT NULL,
    ACCOUNT_RK NUMERIC NOT NULL,
    CURRENCY_RK NUMERIC,
    BALANCE_OUT FLOAT,
    PRIMARY KEY (ON_DATE, ACCOUNT_RK)
);

-- Таблица FT_POSTING_F
CREATE TABLE IF NOT EXISTS DS.FT_POSTING_F (
    OPER_DATE DATE NOT NULL,
    CREDIT_ACCOUNT_RK NUMERIC NOT NULL,
    DEBET_ACCOUNT_RK NUMERIC NOT NULL,
    CREDIT_AMOUNT FLOAT,
    DEBET_AMOUNT FLOAT
);

-- Таблица MD_ACCOUNT_D
CREATE TABLE IF NOT EXISTS DS.MD_ACCOUNT_D (
    DATA_ACTUAL_DATE DATE NOT NULL,
    DATA_ACTUAL_END_DATE DATE NOT NULL,
    ACCOUNT_RK NUMERIC NOT NULL,
    ACCOUNT_NUMBER VARCHAR(20) NOT NULL,
    CHAR_TYPE CHAR(1) NOT NULL,
    CURRENCY_RK NUMERIC NOT NULL,
    CURRENCY_CODE VARCHAR(3) NOT NULL,
    PRIMARY KEY (DATA_ACTUAL_DATE, ACCOUNT_RK)
);

-- Таблица MD_CURRENCY_D
CREATE TABLE IF NOT EXISTS DS.MD_CURRENCY_D (
    CURRENCY_RK NUMERIC NOT NULL,
    DATA_ACTUAL_DATE DATE NOT NULL,
    DATA_ACTUAL_END_DATE DATE,
    CURRENCY_CODE VARCHAR(3),
    CODE_ISO_CHAR VARCHAR(3),
    PRIMARY KEY (CURRENCY_RK, DATA_ACTUAL_DATE)
);

-- Таблица MD_EXCHANGE_RATE_D
CREATE TABLE IF NOT EXISTS DS.MD_EXCHANGE_RATE_D (
    DATA_ACTUAL_DATE DATE NOT NULL,
    DATA_ACTUAL_END_DATE DATE,
    CURRENCY_RK NUMERIC NOT NULL,
    REDUCED_COURCE FLOAT,
    CODE_ISO_NUM VARCHAR(3),
    PRIMARY KEY (DATA_ACTUAL_DATE, CURRENCY_RK)
);

-- Таблица MD_LEDGER_ACCOUNT_S
CREATE TABLE IF NOT EXISTS DS.MD_LEDGER_ACCOUNT_S (
    CHAPTER CHAR(1),
    CHAPTER_NAME VARCHAR(16),
    SECTION_NUMBER INTEGER,
    SECTION_NAME VARCHAR(22),
    SUBSECTION_NAME VARCHAR(21),
    LEDGER1_ACCOUNT INTEGER,
    LEDGER1_ACCOUNT_NAME VARCHAR(47),
    LEDGER_ACCOUNT INTEGER NOT NULL,
        LEDGER_ACCOUNT_NAME INTEGER NOT NULL,
    CHARACTERISTIC CHAR(1),
    IS_RESIDENT INTEGER,
    IS_RESERVE INTEGER,
    IS_RESERVED INTEGER,
    IS_LOAN INTEGER,
    IS_RESERVED_ASSETS INTEGER,
    IS_OVERDUE INTEGER,
    IS_INTEREST INTEGER,
    PAIR_ACCOUNT VARCHAR(5),
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    IS_RUB_ONLY INTEGER,
    MIN_TERM VARCHAR(1),
    MIN_TERM_MEASURE VARCHAR(1),
    MAX_TERM VARCHAR(1),
    MAX_TERM_MEASURE VARCHAR(1),
    LEDGER_ACC_FULL_NAME_TRANSLIT VARCHAR(1),
    IS_REVALUATION VARCHAR(1),
    IS_CORRECT VARCHAR(1),
    PRIMARY KEY (LEDGER_ACCOUNT, START_DATE)
);

create table dm.DM_F101_ROUND_F (
FROM_DATE DATE,
TO_DATE DATE,
CHAPTER VARCHAR(1),
LEDGER_ACCOUNT VARCHAR(5),
CHARACTERISTIC VARCHAR(1),
BALANCE_IN_RUB NUMERIC(23,8),
R_BALANCE_IN_RUB NUMERIC(23,8),
BALANCE_IN_VAL NUMERIC(23,8),
R_BALANCE_IN_VAL NUMERIC(23,8),
BALANCE_IN_TOTAL NUMERIC(23,8),
R_BALANCE_IN_TOTAL NUMERIC(23,8),
TURN_DEB_RUB NUMERIC(23,8),
R_TURN_DEB_RUB NUMERIC(23,8),
TURN_DEB_VAL NUMERIC(23,8),
R_TURN_DEB_VAL NUMERIC(23,8),
TURN_DEB_TOTAL NUMERIC(23,8),
R_TURN_DEB_TOTAL NUMERIC(23,8),
TURN_CRE_RUB NUMERIC(23,8),
R_TURN_CRE_RUB NUMERIC(23,8),
TURN_CRE_VAL NUMERIC(23,8),
R_TURN_CRE_VAL NUMERIC(23,8),
TURN_CRE_TOTAL NUMERIC(23,8),
R_TURN_CRE_TOTAL NUMERIC(23,8),
BALANCE_OUT_RUB NUMERIC(23,8),
R_BALANCE_OUT_RUB NUMERIC(23,8),
BALANCE_OUT_VAL NUMERIC(23,8),
R_BALANCE_OUT_VAL NUMERIC(23,8),
BALANCE_OUT_TOTAL NUMERIC(23,8),
R_BALANCE_OUT_TOTAL NUMERIC(23,8))
